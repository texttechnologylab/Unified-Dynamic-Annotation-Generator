# Freemarker Properties
spring.freemarker.template-loader-path=classpath:/templates/
spring.freemarker.suffix=.ftl

# Application Input Configuration
app.input-dir=${APP_INPUT_DIR:src/main/resources/input}

# Database Configuration
app.database-generator.enabled=true
spring.profiles.active=postgres
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/postgres}
#spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=${DB_USER:postgres}
spring.datasource.password=${DB_PASS:postgres}
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.show-sql=true
spring.sql.init.mode=never
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console
logging.level.org.hibernate.SQL=INFO
#spring.batch.jdbc.initialize-schema=always

app.source-builder.enabled=${SROUCE_BUILDER:false}
app.pipeline-json-import.enabled=${PIPELINE_IMPORTER:true}
app.pipeline-json-import.folder=${PIPELINE_IMPORTER_FOLDER:src/main/resources/pipelines}
app.pipeline-json-import.replace-if-different=${PIPELINE_IMPORTER_REPLACE_IF_DIFFERENT:false}

# --- DB settings used by DUUIImporter -> JooqDatabaseWriter ---
duui.importer.enabled=${DUUI_IMPORTER:false}
app.db.url=${DB_URL:jdbc:postgresql://localhost:5432/postgres}
app.db.user=${DB_USER:postgres}
app.db.pass=${DB_PASS:postgres}
app.db.schema=${DB_SCHEMA:public}
app.db.batch-size=${DB_BATCH_SIZE:2000}
app.db.max-ident=${DB_MAX_IDENT:255}
app.db.dialect=${DB_DIALECT:POSTGRES}
spring.datasource.hikari.connectionInitSql=SET search_path TO ${DB_SCHEMA:public}

# Optional: a bit of useful logging
logging.level.com.zaxxer.hikari=INFO
logging.level.org.jooq=INFO

spring.config.import=optional:file:.env[.properties]
