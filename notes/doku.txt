Universal attributes for every node
- active: boolean (default: true) - Determines if the node is used. if set to false it is handled like the node doesn't exist.


Diagram attributes
- visible: boolean (default: true) - Determines if the diagram is visible. If set to false it is not shown on the screen but may still be used to generate combination diagrams.


 ---------------------------
 ---- Generator Settings ---
 ---------------------------
Diese Settings lassen sich Ã¼berall in einer settings-Liste setzen

1 NumberMappingInterface -> 1 NumberMappingInterface
----------------------------------------------------
- numberSuffix: string (not used by default) - The suffix after the number, could be "%" if we want to show a percentage.
- multiplyNum: float (not used by default) - The number with which we multiply every number in our new CategoryNumberMapping (100 together with divide_by_total will give us percentage)
- multiplyNums: list(float) (not used by default) - The numbers with which we multiply every number in our new CategoryNumberMapping
- addNum: ...
- addNums: ...
- divide...
- ...
- function: string (not used by default) - komplexerer mathematischer Ausdruck, z.B: "*100", "/100", "x/100", "(40-x/100)*2" der auf alle Nummern x angewandt wird.
- round: int (not used by default) - how many digits after comma will be left after round, negative values will round left of comma like -2 will do: 15924 -> 15900 // TODO: Make sure that total percentage stays 100% if this is used together with divide_by_total? Or is this not useful for percentages and instead we should use:
- roundVisible: int (not used by default) - like round but only changes the number displayed in diagram, not the internal number used for the diagram proportions


1 CategoryNumberMappingInterface -> 1 CategoryNumberMappingInterface
--------------------------------------------------------------------
- fractionMode: +double (not used by default) - If set, this will be the full value of which the categorie values are calculated as fractions. For example 100 -> percentage, 1 -> probability


1 ColorMapping -> 1 ColorMapping
--------------------------------
- multiplyByGradient: color string (not used by default) - Used if we want to change all colors by a certain gradient

1 CategoryMapping -> 1 CategoryMapping
--------------------------------------
- categoryWhitelist: (not used by default) list all categories that stay a part of this mapping. Remove all others
- categoryBlacklist: (not used by default) remove the categories from this list from the mapping.


1 Source -> X Generators (X including 1)
------------------------
- categoryWhitelist: (not used by default) list all categories that stay a part of this mapping. Remove all others
- categoryBlacklist: (not used by default) remove the categories from this list from the mapping.


1 Source -> 1 ColorMapping
--------------------------
- fixedColors: (not used by default) list of 2d lists mapping [category: color], the rest will be set randomly
- colorPalette: string (not used by default), can be "warm" or "cold" to select the kinds of random colors that will be chosen.


1 Source -> 1 SubstringMapping
------------------------------------------------
- sofaFile: string (not used by default) - The file that contains the sofa data to be used for the substring mapping.
- sofaID: string (not used by default) - The ID of the sofa data to be used for the substring mapping.